@using Assignment7.Models

@model Assignment7.Exercises.Colors.ColorResult

@{
    ViewBag.Title = "TestColor";
}

<h2>What Color is this?</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @{ List<Assignment7.Models.Color> colorModel = ViewBag.ColorList;
         string score = "";
         if (ViewBag.NoTest > 1)
         {
             score = " (" + ViewBag.Score.AmountOfRightAnswers + " right answers / " + (ViewBag.NoTest - 1) + ")";
         }
        }
        <h4>
            Question nr. @ViewBag.NoTest / @ViewBag.NbTests@score
        </h4>
        <hr />

        <h4>Please enter the name of the color:</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <div class="col-md-10">
                <div style="width: 500px; height: 300px; background-color: @colorModel[0].Name"></div>
            </div>
        </div>

        @*<div class="form-group">
            <div class="col-md-10">
                @Html.EditorFor(model => model.EnteredName, new { htmlAttributes = new { @class = "form-control", @autofocus = "autofocus" } })
                @Html.ValidationMessageFor(model => model.EnteredName, "", new { @class = "text-danger" })
                @Html.Hidden("ColorName", colorModel[0].Name)
            </div>
        </div>*@
        <table>
            @foreach (var item in colorModel)
            {
                <tr>
                    <td>
                        @Html.RadioButton("EnteredName", item.Name)
                    </td>
                    <td>
                        @Html.DisplayName(item.Name)
                    </td>
                </tr>
            }
        </table>
        @Html.Hidden("ColorName", colorModel[0].Name)


        <div class="form-group">
            <div class="col-md-10">
                <input type="submit" value="Validate" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to the Colors", "Index")
</div>
<div>
    @Html.ActionLink("Back to start", "Index", "Main")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
